'use client';
// import { type Metadata } from 'next';
import {
  ClerkProvider,
  SignIn,
  SignInButton,
  SignUp,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from '@clerk/nextjs';
import { dark, shadesOfPurple } from '@clerk/themes';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { TokenProvider } from './context/TokenContext';
import { usePathname } from 'next/navigation';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// export const metadata: Metadata = {
//   title: 'Clerk Next.js Quickstart',
//   description: 'Generated by create next app',
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname();
  console.log(pathname);

  const hideNav = [
    '/dashboard',
    '/dashboard/sources',
    '/dashboard/new-connection',
    '/dashboard/destinations',
  ].includes(pathname);

  console.log(hideNav);
  return (
    <ClerkProvider
      appearance={{
        baseTheme: shadesOfPurple,

        variables: {
          colorBackground: '#ffffff',
          colorText: '#6c47ff',
          colorPrimary: '#6c47ff',
        },
        elements: {
          card: 'bg-white shadow-md',
          headerTitle: 'text-purple-700 font-bold',
          formButtonPrimary: 'bg-[#6c47ff] text-white hover:bg-[#5a3ddd]',
        },
      }}
    >
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {!hideNav && (
            <header className="flex justify-end items-center p-4 gap-4 h-16">
              <SignedOut>
                {/* // link to signin page */}
                {/* <SignIn
                appearance={{
                  variables: {
                    colorPrimary: '#6c47ff',
                    colorText: '#6c47ff',
                    colorBackground: '#ffffff',
                  },
                  elements: {
                    formButtonPrimary:
                      'bg-[#6c47ff] text-white hover:bg-[#563aff]',
                  },
                }}
                redirectUrl="/dashboard"
              /> */}

                {/* <SignUp /> */}
                <SignInButton>
                  <button className="px-6 py-2 bg-white text-purple-600 rounded-lg font-bold transform hover:-translate-y-1 transition duration-400 border border-purple-600">
                    Sign in
                  </button>
                </SignInButton>
                <SignUpButton>
                  <button className="px-6 py-2 bg-purple-600 text-white rounded-lg font-bold transform hover:-translate-y-1 transition duration-400">
                    Sign up
                  </button>
                </SignUpButton>
              </SignedOut>
              <SignedIn>
                <UserButton />
              </SignedIn>
            </header>
          )}
          <TokenProvider>{children}</TokenProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
